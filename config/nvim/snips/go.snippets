snippet pac "Package"
package ${1:main}
$0
endsnippet

snippet import "Import section"
import (
	${1}
)
endsnippet

snippet fn "Function"
func ${1:main}(${2:arg} ${3:type}) ${4:type} (
	${5}
)
endsnippet

snippet for "For loop"
for ${1:i\:\=1}; ${2:i\<\=10}; ${3:\i\+\+} {
	${4}
}
endsnippet

snippet var "Variable declaration"
var ${1:name}${2/(.+)/ /}${2:type}${3: = ${0:value}}
endsnippet

snippet vars "Variables declaration"
var (
	${1:name}${2/(.+)/ /}${2:type}${3: = ${0:value} }
)
endsnippet

snippet : "Variable"
${1:v} := ${2:value}
endsnippet

snippet append "Append function"
append(${1:slice}, ${0:value})
endsnippet

snippet switch "Switch"
switch ${1:var} {
case ${2:value}:
}
endsnippet

snippet const "Constant declaration"
const ${1:name}${2/(.+)/ /}${2:type} = ${0:value}
endsnippet

snippet consts "Constants declaration"
const (
	${1:constant}${2/(.+)/ /}${2:type} = ${0:value}
)
endsnippet

snippet err "Rrror handling"
if err != nil {
	log.${1:Fatal}(err)
}
endsnippet

snippet map "Map type"
map[${1:keytype}]${2:valuetupe}
$0
endsnippet

snippet ;= ";= to :="
:= $0
endsnippet
